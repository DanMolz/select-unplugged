package sp

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestCalculateLoginHash(t *testing.T) {
	for _, tt := range []struct {
		password  string
		readHash  Message
		writeHash Message
	}{
		{
			"Selectronic SP Pro",
			Message("\x9a\x15\x1e\x37\xa7\x76\xb9\x2f\xdd\xff\x71\xea\x16\x9b\xdf\xc0"),
			Message("\xc1\xb6\x97\xba\x5f\xeb\xce\x83\x15\x55\x22\x4d\xf6\x0a\xfa\x0f"),
		},
		{
			"Selectronic SP Pro",
			Message("\xaf\x5e\x15\x01\x2b\x47\xa8\x7d\xc8\xb4\x9e\xe8\x0e\x5c\x0b\x46"),
			Message("\x5e\x42\xeb\x7e\x7b\x3c\xf8\x90\x58\x55\x22\x28\x62\x46\x51\x11"),
		},
		{
			"Selectronic SP Pro",
			Message("\x42\xd4\xa8\xf4\x3a\xb4\x8d\xb1\x95\xdb\x1d\x44\x38\x43\x53\x5d"),
			Message("\xc7\x4b\x67\x1a\x7d\x4e\xe1\xa1\xfc\x2c\xe1\x9e\x39\xe1\x3b\x4f"),
		},
		{
			"Selectronic SP Pro",
			Message("\x16\x6f\x48\xb1\x15\x14\x12\x27\x88\x56\x6c\x5d\xc8\x53\x2c\x22"),
			Message("\x4e\x8b\x8b\x72\xc6\xa0\xe3\x7d\x31\x6c\xc8\xed\x72\xa6\xfe\x5d"),
		},
		{
			"Selectronic SP Pro",
			Message("\x80\x31\x26\x2c\x14\x9f\x17\xaf\xab\x02\x12\xfc\x7a\xba\xc3\x89"),
			Message("\x21\x4c\x00\xf5\x51\x50\x9e\xc6\x55\x7d\xcf\x37\x41\x57\x1c\xf5"),
		},
		{
			"Selectronic SP Pro",
			Message("\xf1\xa9\x59\xd6\x18\x4b\x2f\xfb\x16\x84\x17\x8a\xe4\xde\x2b\x0a"),
			Message("\x6c\xa1\x9a\x84\x6f\xfe\x88\xec\xfb\xf5\x7c\x4f\x01\x10\xa8\x69"),
		},
		{
			"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
			Message("\xb6\x0a\x80\x50\x86\x20\x16\x1c\xfa\x5a\xbb\x11\x45\xd5\x5b\x9a"),
			Message("\x46\x01\x76\x0d\x28\xc7\xa7\xc0\xa3\xea\x0a\xff\xad\x0b\x97\xbe"),
		},
		{
			"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
			Message("\xbf\x48\x71\x75\xbc\x05\x5a\x4a\x10\xca\x4b\xbf\x9e\xe1\xd1\x41"),
			Message("\x03\x8e\x2f\x40\x34\x08\xd2\x1a\x69\x2c\x8c\xc8\x92\x13\x1d\xc5"),
		},
		{
			"a",
			Message("\x00\x77\x19\xad\x5c\xfd\xf6\xae\x41\xfa\xd5\x45\x2b\xfd\x1b\x84"),
			Message("\x5c\xf4\x2a\x5f\xfc\xaf\xd9\x26\x8b\x58\x3f\x50\x1b\xcf\x43\xf0"),
		},
		{
			"a",
			Message("\x87\x36\xc6\x8b\x29\x29\x80\x6b\x62\x11\xa7\xd3\xde\x6a\x90\xca"),
			Message("\x3a\x28\x0a\x7d\x88\x9f\x71\x47\x49\xbf\xe2\x08\x39\x9f\xe4\x43"),
		},
	} {
		assert.Equal(t, tt.writeHash, CalculateLoginHash(tt.password, tt.readHash))
	}

}
